<?php

/*
 * Plugin Name: Poet.ly
 * Version: 1.1.0
 * Plugin URI: https://poet.ly
 * Description: WordPress plugin for <a href="https://poet.ly">Poet.ly</a> allowing you to transfer the generated articles directly in draft to your WordPress blog.
 * Requires at least: 6.0
 * Requires PHP: 7.2
 * Author: Maxence Rose
 * Author URI: https://twitter.com/pirmax
 * License: GPLv2 or later
 * License URI: https://www.gnu.org/licenses/gpl-2.0.html
 */

/**
 * Activate the plugin.
 * @return void
 */
function poetly_activate() {
	// Create a new API key
	$api_key = wp_generate_password( 64, false );
	// Add option to store the API key
	add_option( 'poetly_api_key', $api_key );
	add_option( 'poetly_default_author', null );
	add_option( 'poetly_default_status', 'draft' );
}

register_activation_hook( __FILE__, 'poetly_activate' );

/**
 * Deactivation hook.
 * @return void
 */
function poetly_deactivate() {
	// Remove the API key option
	delete_option( 'poetly_api_key' );
	delete_option( 'poetly_default_author' );
	delete_option( 'poetly_default_status' );
}

register_deactivation_hook( __FILE__, 'poetly_deactivate' );

/**
 * @param WP_REST_Request $request
 *
 * @return WP_REST_Response
 */
function poetly_callback_endpoint_health( WP_REST_Request $request ): WP_REST_Response {
	return new WP_REST_Response( array(
		'status' => 'ok',
	), 200 );
}

/**
 * @param WP_REST_Request $request
 *
 * @return WP_REST_Response
 */
function poetly_callback_endpoint_post( WP_REST_Request $request ): WP_REST_Response {
	// Insert a new post as draft
	$post_id = wp_insert_post( array(
		'post_title'   => $request->get_param( 'title' ),
		'post_slug'    => $request->get_param( 'slug' ),
		'post_content' => $request->get_param( 'content' ),
		'post_excerpt' => $request->get_param( 'excerpt' ),
		'post_status'  => get_option( 'poetly_default_status', 'draft' ),
		'post_author'  => get_option( 'poetly_default_author', null ),
	) );

	return new WP_REST_Response( array(
		'post_id'   => $post_id,
		'permalink' => get_permalink( $post_id ),
		'status'    => get_option( 'poetly_default_status', 'draft' ),
	), 200 );
}

function poetly_check_permission_callback( WP_REST_Request $request ): bool {
	if ( $request->get_param( 'poetly_api_key' ) == get_option( 'poetly_api_key' ) ) {
		return true;
	}

	return false;
}

function poetly_register_endpoints() {
	// Register the health endpoint
	register_rest_route( 'poetly/v1', '/posts', array(
		'methods'             => WP_REST_Server::READABLE,
		'callback'            => 'poetly_callback_endpoint_health',
		'permission_callback' => 'poetly_check_permission_callback',
	) );

	// Register the post endpoint
	register_rest_route( 'poetly/v1', '/posts', array(
		'methods'             => WP_REST_Server::EDITABLE,
		'callback'            => 'poetly_callback_endpoint_post',
		'permission_callback' => 'poetly_check_permission_callback',
	) );
}

add_action( 'rest_api_init', 'poetly_register_endpoints' );

function poetly_plugin_menu() {
	add_posts_page( __( 'Poet.ly options' ), 'Poet.ly', 'manage_options', 'poet.ly', 'poetly_options' );
}

add_action( 'admin_menu', 'poetly_plugin_menu' );

function poetly_options() {
	if ( ! current_user_can( 'manage_options' ) ) {
		wp_die( __( 'You do not have sufficient permissions to access this page.' ) );
	}

	if ( isset( $_POST['submit'] ) ) {
		if ( ! empty( $_POST['poetly_default_author'] ) ) {
			update_option( 'poetly_default_author', sanitize_text_field( $_POST['poetly_default_author'] ) );
		}

		if ( ! empty( $_POST['poetly_default_status'] ) ) {
			update_option( 'poetly_default_status', sanitize_text_field( $_POST['poetly_default_status'] ) );
		}
	}

	if ( isset( $_POST['submit'] ) ) {
		echo '<div id="setting-error-settings_updated" class="updated settings-error notice is-dismissible"><p><strong>' . __( 'Settings saved.' ) . '</strong></p><button type="button" class="notice-dismiss"><span class="screen-reader-text">' . __( 'Dismiss this notice.' ) . '</span></button></div>';
	}

	echo '<div class="wrap">';
	echo '<h1>' . __( 'Poet.ly options' ) . '</h1>';
	echo '<h2>' . __( 'You can manage your <a href="https://poet.ly/websites" target="_blank">Poet.ly</a> settings with the form below.' ) . '</h2>';
	echo '<p>' . __( 'Each post generated by Poet.ly will be created with the default author and status you choose below.' ) . '</p>';
	echo '<form action="' . admin_url( 'edit.php?page=poet.ly' ) . '" method="post" class="form">';
	echo '<table class="form-table">';
	echo '<tbody>';
	echo '<tr>';
	echo '<th scope="row"><label for="poetly_endpoint">' . __( 'Endpoint' ) . '</label></th>';
	echo '<td>';
	echo '<input name="poetly_endpoint" id="poetly_endpoint" class="regular-text" type="text" value="' . get_rest_url( null, 'poetly/v1/posts' ) . '" readonly>';
	echo '</td>';
	echo '</tr>';
	echo '<tr>';
	echo '<th scope="row"><label for="poetly_api_key">' . __( 'Access Code' ) . '</label></th>';
	echo '<td>';
	echo '<input name="poetly_api_key" id="poetly_default_author" class="regular-text" type="text" value="' . esc_html( get_option( 'poetly_api_key' ) ) . '" readonly>';
	echo '<p class="description">' . __( 'You can use it to connect your WordPress blog to <a href="https://poet.ly/dashboard" target="_blank">Poet.ly</a>.' ) . '</p>';
	echo '</td>';
	echo '</tr>';
	echo '<tr>';
	echo '<th scope="row"><label for="poetly_default_author">' . __( 'Default Author' ) . '</label></th>';
	echo '<td>';
	echo '<select name="poetly_default_author" id="poetly_default_author" class="regular-text">';
	echo '<option value="">' . __( 'Select an author' ) . '</option>';
	foreach ( get_users() as $user ) {
		echo '<option value="' . $user->ID . '" ' . selected( $user->ID, esc_html( get_option( 'poetly_default_author' ) ), false ) . '>' . esc_html( $user->display_name ) . '</option>';
	}
	echo '</select>';
	echo '</td>';
	echo '</tr>';
	echo '<tr>';
	echo '<th scope="row"><label for="poetly_default_status">' . __( 'Default Status' ) . '</label></th>';
	echo '<td>';
	echo '<select name="poetly_default_status" id="poetly_default_status" class="regular-text">';
	echo '<option value="draft" ' . selected( 'draft', esc_html( get_option( 'poetly_default_status' ) ), false ) . '>' . __( 'Draft' ) . '</option>';
	echo '<option value="publish" ' . selected( 'publish', esc_html( get_option( 'poetly_default_status' ) ), false ) . '>' . __( 'Publish' ) . '</option>';
	echo '</select>';
	echo '</td>';
	echo '</tr>';
	echo '</tbody>';
	echo '</table>';
	echo '<p class="submit">';
	echo '<input type="submit" name="submit" id="submit" class="button button-primary" value="' . __( 'Save changes' ) . '">&nbsp;';
	echo '<a href="https://poet.ly/websites/create?name=' . urlencode( get_bloginfo( 'name' ) ) . '&endpoint=' . urlencode( get_rest_url( null, 'poetly/v1/posts' ) ) . '&accessCode=' . urlencode( get_option( 'poetly_api_key' ) ) . '" class="button button-secondary">' . __( 'Connect the blog to Poet.ly' ) . '</a>';
	echo '</p>';
	echo '</form>';
	echo '</div>';
}
